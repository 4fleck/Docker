version: '3.4'

services:
  
  fpm:
    build: 
      context: .
      dockerfile: docker/Fpm.Dockerfile
    volumes:
      - ./:/var/www/laravel-docker
    links:
      - db
    
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - 3306:3306
    environment:
      - MYSQL_DB_USERNAME=root
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=laravel
      - SERVICE_NAME=mysql
  
  
  zoo1:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  zoo2:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888


  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2


  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      - zoo2


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
        KAFKA_CLUSTERS_0_NAME: test1
        KAFKA_CLUSTERS_1_NAME: test2
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092
        KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka2:19093
        KAFKA_CLUSTERS_0_ZOOKEEPER: zoo1:2181
        KAFKA_CLUSTERS_1_ZOOKEEPER: zoo2:2182
        KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: Local
        KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: kafka1:19092
        KAFKA_CLUSTERS_1_KAFKACONNECT_0_ADDRESS: kafka2:19093
        #KAFKA_CLUSTERS_0_KAFKACONNECT_0_USERNAME: Admin

  nginx:
    build: 
        context: .
        dockerfile: docker/Nginx.Dockerfile
    ports:
      - 80:80
    links:
      - fpm
    volumes:
      - ./docker/conf/:/var/www/laravel-docker      
    
#networks:
#kafka_network:
    #name: kafka_docker_example_net


#networks:
 # front:
  #   driver: bridge
   #  driver_opts:
    #   com.docker.network.bridge.enable_ip_masquerade: 'false'
